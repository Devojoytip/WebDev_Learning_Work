<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <meta name="description" content="">
    <meta name="keywords" content="HTML,CSS,Javascript,Web Development">
    <meta name="Author" content="DEVOJOYTI PAL">
    <title>Tips for Web Dev</title>
    <link rel="shortcut icon" type="image/x-icon" href="../HTML/Pics/favicon.png">

    <!-- Internal CSS (applied to all the tags) -->
    <style type="text/css">
        h4{
            color: rebeccapurple;
        }
        p{
            color: blue;
            font-size: 20px;
        }

        a{
            color: red;
            font-size: 20px;
        }

    </style>
</head>

<body>

    <nav>
        <a href="Things Learnt/Links1.htm" target="_blank">Home</a>
    </nav>

    <header>

        <!-- Adding Internal Links -->
        <a href="#Comments Section"><br>Go to Comments Section</a>
        
        <h1>Welcome</h1>

        <!-- Adding link to image -->

        <a href="https://tutsplus.com/?_ga=2.156440380.661714580.1640670502-1835304936.1640670502" target="_blank">
            <img src="../HTML/Pics/chris.webp" height='400' width='70%'>
        </a>
        <h2>Reference website :
            <a href="https://www.envato.com/blog/5-tips-for-improving-your-web-development-skills/" target="_blank">
                Envato.com </a>
        </h2>
        <h1>This is my first website</h1>

        <!-- <img src="Five-tips-for-front-end-web-development_2.png" height='300' width='500' alt='Error in loading'> -->
        <!-- alt contains the text to be shown in case image doesn't load -->
        <!-- <img src="F2.png" alt='Error in loading'> -->

        <!-- We can also use % for width, for eg width='50%' means width will be 50% of the total width of the screen -->
        <img src="../HTML/Pics/5 Tips.png" height='500' width='70%' alt='Error in loading'>

    </header>

    <main>
        <!-- We can individually set different styles for different paras which is called inline CSS -->
        <!-- <p style="color: blue; font-size: 30px;"> -->
        <p style="color:violet;">
            <!-- use &nbsp for adding extra spaces -->
            To get &nbsp &nbsp &nbsp hired as a web developer, you need a specific set of skills and abilities to help
            you
            achieve high performance and success in this profession. When you’re starting out, it might be difficult to
            figure out what skills a web developer should have, so we put together a list of the most sought-after
            skills in
            this field.
        </p>

        <!-- <br> -->
        <!-- break br not needed if we use paragraph tags as each paragraph starts from a different line -->
        <p>
            The web developer required skill set may vary depending on the employer, but you will surely come across
            many of
            the essential skills on our list while searching for a web development job. We covered both technical skills
            and
            soft skills so you can have a complete understanding of this role. Read on to find out what you need to make
            it
            as a web developer.
        </p>

        <ol>
            <li>
                <h4>Write Code Every Day</h4>
                <p>If you ask any seasoned developer for their best advice on improving your skills, almost everyone
                    will
                    tell you to write code every single day. While the advice might sound obvious (and therefore not
                    very
                    useful) the simple truth is that it works.</p>

                <p>Bear in mind, this doesn’t mean you have to come up with new projects every day. But it does mean
                    practicing consistently.</p>

                <p>And while you’re at it, take the time to learn the ins and outs of your <a
                        href="https://code.tutsplus.com/courses/perfect-workflow-in-sublime-text-2?_ga=2.46865184.661714580.1640670502-1835304936.1640670502&utm_campaign=envato-blog_web-design_5-tips-for-improving-your-web-development-skills&utm_medium=referral&utm_source=blog"
                        target="_blank">favorite code editor</a>
                    . Learn the shortcuts and try using it without relying on your mouse or your touchpad. You’ll be
                    amazed
                    at how much more productive you’ll be once you actually know all the features your main tool has.
                </p>
            </li>

            <li>
                <h4>Contribute to Open-Source Projects</h4>
                <p>
                    Working on open-source projects from places like GitHub helps you immerse yourself in code. You can
                    choose to fork an existing project and create your iteration of it. You can also contribute to an
                    existing project by helping the project reach its final stage or by fixing minor bugs to improve the
                    project’s stability.

                    <br>
                    <br>
                    No matter which option you choose, it inevitably leads to understanding your code better and it also
                    exposes you to other people’s code which might show you a new way of doing things.

                    <br>
                    <br>
                    On top of that, you get to collaborate with others on fun projects which help you get a second (or a
                    third!) pair of eyes on your code. You’ll also learn to work better in a team and gain an invaluable
                    learning opportunity.
                </p>
            </li>
            <li>
                <h4>Always Be Curious</h4>
                <p>
                    A front-end developer has to keep himself/herself updated continuously with the latest news and
                    innovations in the field. You need to take a proactive stand and learn new things about front-end
                    development from informative blogs and videos.
                </p>
                <p>
                    Also, make it a point to attend conferences and webinars. These meet-ups provide excellent
                    opportunities
                    to expand your network and get acquainted with talented people.
                </p>
                <p>
                    While these tips will surely help you become a better front-end designer, in the long run, you must
                    always remember two things while designing your platform – keep it simple and neat, and don’t forget
                    to
                    create your signature style.
                </p>
            </li>
            <li>
                <h4>Challenge Yourself With a New Skill</h4>

                <p>
                    There is no shortage on development tutorials on the web. And while some of the new trends in the
                    development industry don’t stick around for long, there is no reason to stay within your comfort
                    zone.
                </p>

                <p>
                    If you’re a WordPress theme developer, try your hand at
                    <a href="https://code.tutsplus.com/tutorials/creating-a-custom-wordpress-messaging-system-part-1--cms-27542?_ga=2.18084414.661714580.1640670502-1835304936.1640670502&utm_campaign=envato-blog_web-design_5-tips-for-improving-your-web-development-skills&utm_medium=referral&utm_source=blog"
                        target="_blank">creating a plugin</a>
                    . If you’re a software developer working with web apps, why not give
                    <a href="https://code.tutsplus.com/categories/mobile-development?_ga=2.18084414.661714580.1640670502-1835304936.1640670502&utm_campaign=envato-blog_web-design_5-tips-for-improving-your-web-development-skills&utm_medium=referral&utm_source=blog"
                        target="_blank">mobile app development</a>
                    a try?
                </p>

                <p>
                    Even though you won’t reach a level of mastery by going through a tutorial here and there, it still
                    follows the principle of being exposed and immersed in code on a daily basis.
                </p>

                <p>
                    Don’t forget that in many cases, the tutorials on these sites have been written by developers with
                    years
                    of experience and they also often highlight new features in new technology, languages, and APIs.
                </p>

                <ul>
                    <li>
                        <a href="https://code.tutsplus.com/tutorials/28-html5-features-tips-and-techniques-you-must-know--net-13520"
                            target="_blank">HTML5</a>
                    </li>
                    <li>
                        <a href="https://www.creativebloq.com/features/css-tricks-to-revolutionise-your-layouts"
                            target="_blank">CSS</a>
                    </li>
                    <li>
                        <a href="https://www.freecodecamp.org/news/javascript-hacks/" target="_blank">JavaScript</a>
                    </li>
                </ul>
            </li>

            <li>
                <h4>Schedule Regular Downtime</h4>
                <p>While coding everyday is extremely beneficial, take care to schedule regular downtime, too. As ironic
                    as
                    it may sound, time spent not producing anything will actually make you more productive.
                </p>

                <p>If you’re constantly working, you run the risk of burning out and living under stress, which can
                    result
                    in sloppy code, missed deadlines, and missed opportunities. Your ability to think clearly and solve
                    problems will deteriorate and, ultimately, your health will suffer too.
                </p>

                <p>That’s why it’s crucial to schedule regular downtime. If you find you cannot break away from work,
                    then
                    schedule it in your calendar and set a reminder to stop working for a set period of time. This way,
                    you
                    can take a break without being overwhelmed by guilt, and you might even find it gives you motivation
                    to
                    push through the most intensive coding sessions.
                </p>
            </li>

            <li>
                <h4>Teach Others What You Know</h4>
                <p>You might think you aren’t a good fit to write about code. After all, you’re not a writer. But
                    starting a
                    blog, where you share your knowledge with others, is a great way to continue learning.</p>

                <p>By writing about what you know, you will learn to organize your thoughts and structure the topic
                    you’re
                    writing about. It gives you the opportunity to review what you already know and back it up with
                    practical examples. In some cases, you might want to research the topic further which leads to more
                    learning and a better understanding of the problem you’re trying to cover.
                </p>

                <p>Not only that, but a blog increases your visibility and it positions you as the expert on the topic.
                    So,
                    go ahead and add a blog to your website. You’ve got nothing to lose and a lot to gain.</p>
            </li>
        </ol>

        <div>
            <p>
                <h4>Final Thoughts</h4> 
                Before you rush off to implement the tips above, bear in mind that programming languages
                and technologies come and go. While this is a good reason to get familiar with as many languages as
                possible, you’ll become a much better developer if you spend your time studying and mastering the
                programming fundamentals.

                <br>
                <br>
                The simple truth is that the basics never change and therefore it’s better to pay more attention to the
                underlying architecture rather than focus on mastering the latest new feature to come out in a
                particular language. And once you have a firm grasp of the fundamentals, mastering your favorite
                language, or even picking up a new one, becomes much easier. 
                <br>
                <br>
                Happy coding!
            </p>
        </div>

        <!-- Comments Section -->
        <section id="Comments Section">
            <h2>Comments</h2>
            <div>
                <h4>Name</h4>
                <h4>Comment</h4>
            </div>
            <div>
                <h4>Name</h4>
                <h4>Comment</h4>
            </div>
            <div>
                <h4>Name</h4>
                <h4>Comment</h4>
            </div>
            <div>
                <h4>Name</h4>
                <h4>Comment</h4>
            </div>
        </section>

        <section>
            <h3>Leave a Reply</h3>
            <b></b>
            <p>Your mail id will be published. Required fields are marked *</p>
            <form action="">
                <label for="c">Comment &nbsp;</label>
                <input type="text" name="c" id="c"><br>
                <label for="n">Name &nbsp; &nbsp; &nbsp; &nbsp;<b></b></label>
                <input type="text" name="n" id="n"><br>
                <label for="e">Email &nbsp; &nbsp; &nbsp; &nbsp;</label>
                <input type="email" name="e" id="e"><br>
                <label for="e">Website &nbsp; &nbsp; </label>
                <input type="url" name="w" id="w"><br>

            </form>
        </section>

        <a href="#">Back To Top</a>

    </main>

</body>

</html>